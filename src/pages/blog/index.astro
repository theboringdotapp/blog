---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { BLOG } from "@consts";

const allBlog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const allProjects = (await getCollection("projects"))
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Pre-render insights
const insightEntries = allBlog.filter((entry) => entry.data.type === "insight");
const insights = await Promise.all(
  insightEntries.map(async (insight) => {
    const { Content } = await render(insight);
    return { insight, Content };
  })
);

const blogPosts = allBlog.filter((entry) => entry.data.type === "post");

// Create a map for quick lookup of rendered insights
const insightContentMap = new Map();
insights.forEach(({ insight, Content }) => {
  insightContentMap.set(insight.id, Content);
});

// Combine all entries (blog posts, insights, and projects) and sort chronologically
const allEntries = [...allBlog, ...allProjects]
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Separate content types for different display treatments
const posts = blogPosts;
const projects = allProjects;

type Acc = {
  [year: string]: CollectionEntry<"blog">[];
};

// Group posts by year for traditional blog view
const postsByYear = posts.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));

// No pre-rendering needed for simple display
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-12">
        <!-- Timeline Header -->
        <div class="space-y-4">
          <h1 class="text-3xl font-bold text-black dark:text-white">Timeline</h1>
          <p class="text-neutral-600 dark:text-neutral-400">
            My thoughts, learnings, and insights as I build projects. A mix of detailed posts and quick updates.
          </p>
        </div>

        <!-- Filter Tabs -->
        <div class="flex gap-2 border-b border-neutral-200 dark:border-neutral-800">
          <button 
            id="all-tab" 
            class="tab-btn px-4 py-2 text-sm font-medium border-b-2 border-transparent hover:border-neutral-300 dark:hover:border-neutral-600 transition-colors"
            data-filter="all"
          >
            All
          </button>
          <button 
            id="posts-tab" 
            class="tab-btn px-4 py-2 text-sm font-medium border-b-2 border-transparent hover:border-neutral-300 dark:hover:border-neutral-600 transition-colors"
            data-filter="posts"
          >
            Posts
          </button>
          <button 
            id="insights-tab" 
            class="tab-btn px-4 py-2 text-sm font-medium border-b-2 border-transparent hover:border-neutral-300 dark:hover:border-neutral-600 transition-colors"
            data-filter="insights"
          >
            Insights
          </button>
          <button 
            id="projects-tab" 
            class="tab-btn px-4 py-2 text-sm font-medium border-b-2 border-transparent hover:border-neutral-300 dark:hover:border-neutral-600 transition-colors"
            data-filter="projects"
          >
            Projects
          </button>
        </div>

        <!-- All Timeline View -->
        <div id="all-view" class="content-view space-y-0">
          <div class="relative">
            <!-- Continuous timeline line -->
            <div class="absolute left-[0.75rem] top-6 bottom-6 w-px bg-gradient-to-b from-slate-200 via-slate-300 to-slate-200 dark:from-slate-700 dark:via-slate-600 dark:to-slate-700"></div>
            
            <div class="space-y-8">
            {allEntries.map((entry, index) => {
              // Check if this is a blog entry with type field
              const isBlogEntry = 'type' in entry.data;
              const entryType = isBlogEntry ? (entry.data as any).type : 'project';
              
              if (entryType === "insight") {
                const Content = insightContentMap.get(entry.id);
                return (
                  <article class="group relative flex items-start gap-6">
                    <!-- Timeline marker -->
                    <div class="relative flex-shrink-0 mt-3">
                      <div class="w-6 h-6 bg-white/90 dark:bg-slate-800/90 rounded-full border-2 border-slate-200 dark:border-slate-700 shadow-lg
                                  backdrop-blur-sm flex items-center justify-center
                                  group-hover:bg-white dark:group-hover:bg-slate-700
                                  group-hover:scale-110 transition-all duration-300 ease-out">
                        <svg class="w-3 h-3 text-slate-600 dark:text-slate-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" 
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                        </svg>
                      </div>
                    </div>
                    
                    <!-- Thought content -->
                    <div class="flex-1 min-w-0">
                      <!-- Thought card consistent with other cards -->
                      <div class="relative overflow-hidden rounded-2xl p-6
                                  bg-white/60 dark:bg-slate-800/60
                                  border border-slate-200/60 dark:border-slate-700/40
                                  backdrop-blur-md
                                  transition-all duration-500 ease-out
                                  hover:bg-white/80 dark:hover:bg-slate-800/80
                                  hover:border-slate-300/80 dark:hover:border-slate-600/60
                                  hover:shadow-2xl hover:shadow-slate-200/40 dark:hover:shadow-black/40
                                  hover:scale-[1.01] hover:-translate-y-1
                                  transform-gpu">
                        
                        <!-- Background gradient animation -->
                        <div class="absolute inset-0 bg-gradient-to-br 
                                    from-transparent via-transparent to-transparent
                                    group-hover:from-purple-100/20 group-hover:via-transparent group-hover:to-blue-100/20
                                    dark:group-hover:from-purple-900/10 dark:group-hover:via-transparent dark:group-hover:to-blue-900/10
                                    transition-all duration-700 ease-out"></div>
                        
                        <!-- Thought content -->
                        <div class="relative">
                          <div class="space-y-3">
                            <!-- Thought header -->
                            <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2 sm:gap-4">
                                                        <!-- Timestamp -->
                          <div class="text-xs text-slate-500 dark:text-slate-400
                                      group-hover:text-slate-600 dark:group-hover:text-slate-300
                                      transition-colors duration-300 ease-out">
                            <FormattedDate date={entry.data.date} showTime={true} />
                          </div>
                              
                              <!-- Hashtags -->
                              {isBlogEntry && 'tags' in entry.data && entry.data.tags && entry.data.tags.length > 0 && (
                                <div class="flex flex-wrap gap-2">
                                  {entry.data.tags.slice(0, 3).map((tag: string) => (
                                    <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs
                                                bg-slate-100 dark:bg-slate-700
                                                text-slate-600 dark:text-slate-300
                                                group-hover:bg-gradient-to-r group-hover:from-purple-100 group-hover:to-blue-100
                                                dark:group-hover:from-purple-900/30 dark:group-hover:to-blue-900/30
                                                transition-all duration-300 ease-out">
                                      #{tag}
                                    </span>
                                  ))}
                                </div>
                              )}
                            </div>
                            
                            <!-- Thought content -->
                            <div class="text-slate-700 dark:text-slate-200 leading-relaxed
                                        group-hover:text-slate-800 dark:group-hover:text-slate-100
                                        transition-colors duration-300 ease-out">
                              <Content />
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </article>
                );
              } else if (entryType === "project") {
                // Project with special timeline treatment
                return (
                  <article class="group relative flex items-start gap-6">
                    <!-- Timeline marker -->
                    <div class="relative flex-shrink-0 mt-3">
                      <div class="w-3 h-3 ml-1.5 bg-emerald-500 dark:bg-emerald-400 rounded-full border-2 border-white dark:border-slate-900 shadow-lg
                                  group-hover:bg-emerald-400 dark:group-hover:bg-emerald-300 
                                  group-hover:scale-125 transition-all duration-300 ease-out
                                  ring-2 ring-emerald-200 dark:ring-emerald-800"></div>
                    </div>
                    
                    <!-- Project content -->
                    <div class="flex-1 min-w-0">
                      <ArrowCard entry={entry} />
                    </div>
                  </article>
                );
              } else {
                // Full post with card and read more
                return (
                  <article class="group relative flex items-start gap-6">
                    <!-- Timeline marker -->
                    <div class="relative flex-shrink-0 mt-3">
                      <div class="w-3 h-3 ml-1.5 bg-blue-500 dark:bg-blue-400 rounded-full border-2 border-white dark:border-slate-900 shadow-lg
                                  group-hover:bg-blue-400 dark:group-hover:bg-blue-300 
                                  group-hover:scale-125 transition-all duration-300 ease-out
                                  ring-2 ring-blue-200 dark:ring-blue-800"></div>
                    </div>
                    
                    <!-- Post content -->
                    <div class="flex-1 min-w-0">
                      <ArrowCard entry={entry} />
                    </div>
                  </article>
                );
              }
            })}
            </div>
          </div>
        </div>

        <!-- Posts Only View -->
        <div id="posts-view" class="content-view hidden space-y-0">
          <div class="relative">
            <!-- Continuous timeline line -->
            <div class="absolute left-[1.125rem] top-6 bottom-6 w-px bg-gradient-to-b from-slate-200 via-slate-300 to-slate-200 dark:from-slate-700 dark:via-slate-600 dark:to-slate-700"></div>
            
            <div class="space-y-12">
            {
              years.map((year) => (
                <section class="animate space-y-6">
                  <!-- Year marker -->
                 {/*  <div class="flex items-center gap-4">
                    <div class="w-6 h-6 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full border-2 border-white dark:border-slate-900 shadow-lg flex items-center justify-center">
                      <div class="w-2 h-2 bg-white rounded-full"></div>
                    </div>
                    <div class="font-bold text-xl text-slate-900 dark:text-slate-100">
                      {year}
                    </div>
                  </div> */}
                  
                  <!-- Posts for this year -->
                  <div class="ml-10 space-y-8">
                    {postsByYear[year].map((post) => (
                      <article class="group relative flex items-start gap-6">
                        <!-- Timeline marker -->
                        <div class="relative flex-shrink-0 mt-3 -ml-[2.75rem]">
                          <div class="w-3 h-3 ml-3.75 bg-blue-500 dark:bg-blue-400 rounded-full border-2 border-white dark:border-slate-900 shadow-lg
                                      group-hover:bg-blue-400 dark:group-hover:bg-blue-300 
                                      group-hover:scale-125 transition-all duration-300 ease-out
                                      ring-2 ring-blue-200 dark:ring-blue-800"></div>
                        </div>
                        
                        <!-- Post content -->
                        <div class="flex-1 min-w-0">
                          <ArrowCard entry={post} />
                        </div>
                      </article>
                    ))}
                  </div>
                </section>
                              ))
              }
            </div>
          </div>
        </div>

        <!-- Insights Only View -->
        <div id="insights-view" class="content-view hidden space-y-0">
          <div class="relative">
            <!-- Continuous timeline line -->
            <div class="absolute left-[1.125rem] top-6 bottom-6 w-px bg-gradient-to-b from-slate-200 via-slate-300 to-slate-200 dark:from-slate-700 dark:via-slate-600 dark:to-slate-700"></div>
            
            <div class="space-y-8">
            {insights.map(({ insight, Content }) => (
              <article class="group relative flex items-start gap-6">
                <!-- Timeline marker -->
                <div class="relative flex-shrink-0 mt-3 ml-1.5">
                  <div class="w-6 h-6 bg-white/90 dark:bg-slate-800/90 rounded-full border-2 border-slate-200 dark:border-slate-700 shadow-lg
                              backdrop-blur-sm flex items-center justify-center
                              group-hover:bg-white dark:group-hover:bg-slate-700
                              group-hover:scale-110 transition-all duration-300 ease-out">
                    <svg class="w-3 h-3 text-slate-600 dark:text-slate-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" 
                            d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                    </svg>
                  </div>
                </div>
                
                <!-- Thought content -->
                <div class="flex-1 min-w-0">
                  <!-- Thought card consistent with other cards -->
                  <div class="relative overflow-hidden rounded-2xl p-6
                              bg-white/60 dark:bg-slate-800/60
                              border border-slate-200/60 dark:border-slate-700/40
                              backdrop-blur-md
                              transition-all duration-500 ease-out
                              hover:bg-white/80 dark:hover:bg-slate-800/80
                              hover:border-slate-300/80 dark:hover:border-slate-600/60
                              hover:shadow-2xl hover:shadow-slate-200/40 dark:hover:shadow-black/40
                              hover:scale-[1.01] hover:-translate-y-1
                              transform-gpu">
                    
                    <!-- Background gradient animation -->
                    <div class="absolute inset-0 bg-gradient-to-br 
                                from-transparent via-transparent to-transparent
                                group-hover:from-purple-100/20 group-hover:via-transparent group-hover:to-blue-100/20
                                dark:group-hover:from-purple-900/10 dark:group-hover:via-transparent dark:group-hover:to-blue-900/10
                                transition-all duration-700 ease-out"></div>
                    
                    <!-- Thought content -->
                    <div class="relative">
                      <div class="space-y-3">
                        <!-- Thought header -->
                        <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2 sm:gap-4">
                          <!-- Timestamp -->
                          <div class="text-xs text-slate-500 dark:text-slate-400
                                      group-hover:text-slate-600 dark:group-hover:text-slate-300
                                      transition-colors duration-300 ease-out">
                            <FormattedDate date={insight.data.date} showTime={true} />
                          </div>
                          
                          <!-- Hashtags -->
                          {insight.data.tags && insight.data.tags.length > 0 && (
                            <div class="flex flex-wrap gap-2">
                              {insight.data.tags.slice(0, 3).map((tag: string) => (
                                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs
                                            bg-slate-100 dark:bg-slate-700
                                            text-slate-600 dark:text-slate-300
                                            group-hover:bg-gradient-to-r group-hover:from-purple-100 group-hover:to-blue-100
                                            dark:group-hover:from-purple-900/30 dark:group-hover:to-blue-900/30
                                            transition-all duration-300 ease-out">
                                  #{tag}
                                </span>
                              ))}
                            </div>
                          )}
                        </div>
                        
                        <!-- Thought content -->
                        <div class="text-slate-700 dark:text-slate-200 leading-relaxed
                                    group-hover:text-slate-800 dark:group-hover:text-slate-100
                                    transition-colors duration-300 ease-out">
                          <Content />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </article>
            ))}
            </div>
          </div>
        </div>

        <!-- Projects Only View -->
        <div id="projects-view" class="content-view hidden space-y-0">
          <div class="relative">
            <!-- Continuous timeline line -->
            <div class="absolute left-[1.125rem] top-6 bottom-6 w-px bg-gradient-to-b from-slate-200 via-slate-300 to-slate-200 dark:from-slate-700 dark:via-slate-600 dark:to-slate-700"></div>
            
            <div class="space-y-8">
            {
              projects.map((project) => (
                <article class="group relative flex items-start gap-6">
                  <!-- Timeline marker -->
                  <div class="relative flex-shrink-0 mt-3">
                    <div class="w-3 h-3 ml-3 bg-emerald-500 dark:bg-emerald-400 rounded-full border-2 border-white dark:border-slate-900 shadow-lg
                                group-hover:bg-emerald-400 dark:group-hover:bg-emerald-300 
                                group-hover:scale-125 transition-all duration-300 ease-out
                                ring-2 ring-emerald-200 dark:ring-emerald-800"></div>
                  </div>
                  
                  <!-- Project content -->
                  <div class="flex-1 min-w-0">
                    <ArrowCard entry={project} />
                  </div>
                </article>
              ))
            }
            </div>
          </div>
        </div>
      </div>
    </aside>
  </Container>
</Layout>

<script>
  // Tab switching functionality
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Timeline script loaded'); // Debug log
    
    const tabs = document.querySelectorAll('.tab-btn');
    const views = document.querySelectorAll('.content-view');
    
    console.log('Found tabs:', tabs.length, 'views:', views.length); // Debug log
    
    // Set initial active tab
    const allTab = document.getElementById('all-tab');
    if (allTab) {
      allTab.classList.add('border-neutral-800', 'dark:border-neutral-200', 'text-black', 'dark:text-white');
      allTab.classList.remove('border-transparent');
    }
    
    tabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        e.preventDefault();
        const filter = tab.getAttribute('data-filter');
        console.log('Tab clicked:', filter); // Debug log
        
        // Update active tab
        tabs.forEach(t => {
          t.classList.remove('border-neutral-800', 'dark:border-neutral-200', 'text-black', 'dark:text-white');
          t.classList.add('border-transparent');
        });
        tab.classList.add('border-neutral-800', 'dark:border-neutral-200', 'text-black', 'dark:text-white');
        tab.classList.remove('border-transparent');
        
        // Show/hide views
        views.forEach(view => {
          view.classList.add('hidden');
        });
        
        const targetView = document.getElementById(`${filter}-view`);
        console.log('Target view:', targetView); // Debug log
        if (targetView) {
          targetView.classList.remove('hidden');
        }
      });
    });
  });
</script>
